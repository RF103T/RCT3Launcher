//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RCT3启动器.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RCT3启动器.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 // CRT shader
        ///// 
        ///// Copyright (C) 2010-2012 cgwg, Themaister and DOLLS
        ///// 
        ///// This program is free software; you can redistribute it and/or modify it
        ///// under the terms of the GNU General Public License as published by the Free
        ///// Software Foundation; either version 2 of the License, or (at your option)
        ///// any later version.
        ///
        ///#define d CRTDistance
        ///#define R CRTCurvatureRadius
        ///
        ///// Comment the next line to disable interpolation in linear gamma (and gain speed).
        /////#define LINEAR_PROCESSING
        ///
        ///// aspect ratio
        ///#d [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string AdvancedCRT {
            get {
                return ResourceManager.GetString("AdvancedCRT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap background {
            get {
                object obj = ResourceManager.GetObject("background", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                       Description                           /
        ///  &apos;------------------------------------------------------------/
        ///
        ///Game: Battlefield 3
        ///SweetFX version: 1.3
        ///Author: Derko1
        ///Description: &quot;SMAA, Luma Sharpening, DPX, Curves, Tone Mapping, Vibrance and Dither&quot;
        ///Showcase: http://www.overclock.net/t/1296721/how-to-anti-aliasing-injection-fxaa-smaa-and-sweetfx/350#post_18575757
        ///
        ///   /*------------------------------------------------ [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Battlefield_3_Derko1 {
            get {
                return ResourceManager.GetString("Battlefield_3_Derko1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                       Description                           /
        ///  &apos;------------------------------------------------------------/
        ///
        ///Game: Black Mesa
        ///SweetFX version: 1.2
        ///Author: CeeJay.dk
        ///Description: 
        ///
        ///These are the settings I&apos;m currently using for Black Mesa.
        ///I&apos;ve lowered the SMAA_THRESHOLD to 0.08 to catch some edges that
        ///went undetected and I&apos;m using very conservative sharpening,
        ///vibrance and vignette and using dither to make the vigne [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Black_Mesa_CeeJay {
            get {
                return ResourceManager.GetString("Black_Mesa_CeeJay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /*------------------------------------------------------------------------------
        ///						BLOOM
        ///------------------------------------------------------------------------------*/
        ///
        ///float4 BloomPass( float4 ColorInput2,float2 Tex  )
        ///{
        ///	float3 BlurColor2 = 0;
        ///	float3 Blurtemp = 0;
        ///	//float MaxDistance = sqrt(8*BloomWidth);
        ///	float MaxDistance = 8*BloomWidth; //removed sqrt
        ///	float CurDistance = 0;
        ///	
        ///	//float Samplecount = 0;
        ///	float Samplecount = 25.0;
        ///	
        ///	float2 blurtempvalue = Tex * pixel * BloomWidth;
        ///	
        ///	//float dis [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Bloom {
            get {
                return ResourceManager.GetString("Bloom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似   /*-----------------------------------------------------------.
        /// /                          Border                            /
        ///&apos;-----------------------------------------------------------*/
        ///// Version 1.2
        ///
        ////*
        ///Version 1.0 by Oomek
        ///- Fixes light, one pixel thick border in some games when forcing MSAA like i.e. Dishonored
        ///
        ///Version 1.1 by CeeJay.dk
        ///- Optimized the shader. It still does the same but now it runs faster.
        ///
        ///Version 1.2 by CeeJay.dk
        ///- Added border_width and border_color features
        ///
        ///Version 1.3 by Cee [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Border {
            get {
                return ResourceManager.GetString("Border", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /*------------------------------------------------------------------------------
        ///						Cartoon
        ///------------------------------------------------------------------------------*/
        ///
        ///#ifndef CartoonEdgeSlope //for backwards compatiblity with settings preset from earlier versions of SweetFX
        ///  #define CartoonEdgeSlope 1.5 
        ///#endif
        ///
        ///float4 CartoonPass( float4 colorInput, float2 Tex )
        ///{
        ///  float3 CoefLuma2 = float3(0.2126, 0.7152, 0.0722);  //Values to calculate luma with
        ///  
        ///  float diff1 = dot(CoefLuma2,myTex2D(s0, Te [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Cartoon {
            get {
                return ResourceManager.GetString("Cartoon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.
        ///  /                          Curves                             /
        ///  &apos;-----------------------------------------------------------*/
        ////*
        ///  by Christian Cann Schuldt Jensen ~ CeeJay.dk
        ///
        ///  Curves, uses S-curves to increase contrast, without clipping highlights and shadows.
        ///*/
        ///
        ///float4 CurvesPass( float4 colorInput )
        ///{
        ///  float3 lumCoeff = float3(0.2126, 0.7152, 0.0722);  //Values to calculate luma with
        ///  float Curves_contrast_blend = Curves_contrast [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Curves {
            get {
                return ResourceManager.GetString("Curves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.
        ///  /                           Custom                            /
        ///  &apos;-----------------------------------------------------------*/
        ////*
        ///
        ///*/
        ///
        ///#define CustomLuma float3(0.2126, 0.7152, 0.0722)
        ///
        ///float4 CustomPass( float4 colorInput, float2 tex )
        ///{
        ///
        ///  //just some example code. 
        ///  float luma = dot(colorInput.rgb,CustomLuma); //Calculate luma
        ///  float3 chroma = colorInput.rgb - luma; //Calculate chroma
        ///  float3 color = 1.0 - luma; //invert the luma
        ///   [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Custom {
            get {
                return ResourceManager.GetString("Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] d3d9 {
            get {
                object obj = ResourceManager.GetObject("d3d9", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] d3d91 {
            get {
                object obj = ResourceManager.GetObject("d3d91", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] d3d9FXAA {
            get {
                object obj = ResourceManager.GetObject("d3d9FXAA", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] d3d9SMAA {
            get {
                object obj = ResourceManager.GetObject("d3d9SMAA", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.
        ///  /                       Description                           /
        ///  &apos;------------------------------------------------------------/
        ///
        ///Game:
        ///Author:
        ///SweetFX version: 1.5
        ///Description:
        ///
        ///Please note when tweaking settings that higher numbers does not always equal better (nor does lower).
        ///Finding the best settings for your game and your taste is about finding just the right amount to apply.
        ///
        ///If you made a good setttings preset please share it with y [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Default_1_5_settings {
            get {
                return ResourceManager.GetString("Default_1_5_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似   /*-------------.
        ///  | :: Dither :: |
        ///  &apos;-------------*/
        ////*
        ///  Dither version 1.3.0
        ///  by Christian Cann Schuldt Jensen ~ CeeJay.dk
        ///
        ///  Does dithering of the greather than 8-bit per channel precision used in shaders.
        ///  Note that the input from the framebuffer is 8-bit and cannot be dithered down to 8-bit.
        ///  Dithering therefore only works on the effects that SweetFX applies afterwards.
        ///*/
        ///
        ///#ifndef dither_method
        ///  #define dither_method 1
        ///#endif
        ///
        ///float4 DitherPass( float4 colorInput, float2 tex )
        ///{
        ///   float3 colo [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Dither {
            get {
                return ResourceManager.GetString("Dither", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /*
        ///DPX/Cineon shader by Loadus ( http://www.loadusfx.net/virtualdub/DPX.fx )
        ///
        ///Version 1.0
        ///Ported to SweetFX by CeeJay.dk
        ///
        ///Version 1.1
        ///Improved performance
        ///
        ///*/
        ///
        ///static float3x3 RGB =
        ///{
        ///2.67147117265996,-1.26723605786241,-0.410995602172227,
        ///-1.02510702934664,1.98409116241089,0.0439502493584124,
        ///0.0610009456429445,-0.223670750812863,1.15902104167061
        ///};
        ///
        ///static float3x3 XYZ =
        ///{
        ///0.500303383543316,0.338097573222739,0.164589779545857,
        ///0.257968894274758,0.676195259144706,0.0658358459823868,
        ///0.0234517888692628,0.112 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string DPX {
            get {
                return ResourceManager.GetString("DPX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] dxgi {
            get {
                object obj = ResourceManager.GetObject("dxgi", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] dxgi1 {
            get {
                object obj = ResourceManager.GetObject("dxgi1", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] dxgiSMAA {
            get {
                object obj = ResourceManager.GetObject("dxgiSMAA", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                         Explosion                           /
        ///  &apos;-----------------------------------------------------------*/
        ////* 
        ///
        ///*/
        ///
        ///float4 ExplosionPass( float4 colorInput, float2 tex )
        ///{
        ///
        ///  // -- pseudo random number generator --
        ///  float2 sine_cosine;
        ///  sincos(dot(tex, float2(12.9898,78.233)),sine_cosine.x,sine_cosine.y);
        ///  sine_cosine = sine_cosine * 43758.5453 + tex;
        ///  float2 noise = frac(sine_cosine);
        ///
        ///  tex = (-Explosion_Radiu [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Explosion {
            get {
                return ResourceManager.GetString("Explosion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /*============================================================================
        ///
        ///
        ///                    NVIDIA FXAA 3.11 by TIMOTHY LOTTES
        ///					
        ///					FXAA POST PROCESS INJECTION MODIFIED VERSION
        ///
        ///------------------------------------------------------------------------------
        ///COPYRIGHT (C) 2010, 2011 NVIDIA CORPORATION. ALL RIGHTS RESERVED.
        ///------------------------------------------------------------------------------
        ///TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED
        ///*AS IS* AND NVIDIA [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Fxaa3_11 {
            get {
                return ResourceManager.GetString("Fxaa3_11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /           Compability notes for specific games              /
        ///  &apos;-----------------------------------------------------------*/
        ///
        ///Note : There are many more .. and probably better updated game notes in the SweetFX Settings Database at http://sfx.thelazy.net/games/
        ///
        /// ** Crysis **
        ///Install SweetFX to the main Crysis folder, but move d3d9.dll , dxgi.dll and injector.ini to the bin32 folder.
        ///
        ///Then create an autoexec.cfg file in the main Crysi [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Game_compability {
            get {
                return ResourceManager.GetString("Game_compability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /*------------------------------------------------------------------------------
        ///						HDR
        ///------------------------------------------------------------------------------*/
        ///
        ///float4 HDRPass( float4 colorInput, float2 Tex )
        ///{
        ///	float3 c_center = myTex2D(s0, Tex).rgb; //reuse SMAA center sample or lumasharpen center sample?
        ///	//float3 c_center = colorInput.rgb; //or just the input?
        ///	
        ///	//float3 bloom_sum1 = float3(0.0, 0.0, 0.0); //don&apos;t initialize to 0 - use the first tex2D to do that
        ///	//float3 bloom_sum2 = float [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string HDR {
            get {
                return ResourceManager.GetString("HDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 [injector]
        ///; See the following URL to find out what keycode a key has:
        ///; http://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes
        ///
        ///;toggle shader keycode
        ///key_toggle = 145 ; 145 = the SCROLL_LOCK key
        ///
        ///;make screenshot keycode
        ///key_screenshot = 44 ; 44 = PRINTSCREEN
        ///
        ///;reload shader files keycode
        ///key_reload = 19 ; 19 = the PAUSE key
        ///
        ///
        ///[smaa]
        ///;smaa preset one of {SMAA_PRESET_LOW, SMAA_PRESET_MEDIUM, SMAA_PRESET_HIGH, SMAA_PRESET_ULTRA}
        ///;keep it set to SMAA_PRESET_CUSTOM to allow for custom setti [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string injector {
            get {
                return ResourceManager.GetString("injector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                          Levels                             /
        ///  &apos;------------------------------------------------------------/
        ///
        ///by Christian Cann Schuldt Jensen ~ CeeJay.dk
        ///
        ///Allows you to set a new black and a white level.
        ///This increases contrast, but clips any colors outside the new range to either black or white
        ///and so some details in the shadows or highlights can be lost.
        ///
        ///The shader is very useful for expanding the 16-235 TV range  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Levels {
            get {
                return ResourceManager.GetString("Levels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                      Lift Gamma Gain                        /
        ///  &apos;-----------------------------------------------------------*/
        ////*
        ///  by 3an and CeeJay.dk
        ///  
        ///  Version 1.1
        ///*/
        ///
        ///float4 LiftGammaGainPass( float4 colorInput )
        ///{
        ///	// -- Get input --
        ///	float3 color = colorInput.rgb;
        ///	
        ///	// -- Lift --
        ///	//color = color + (RGB_Lift / 2.0 - 0.5) * (1.0 - color); 
        ///	color = color * (1.5-0.5 * RGB_Lift) + 0.5 * RGB_Lift - 0.5;
        ///	color = saturate(color);  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string LiftGammaGain {
            get {
                return ResourceManager.GetString("LiftGammaGain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 If you have installed SweetFX correctly and have run the game with this log.log file in the same folder
        ///as the game .exe and the d3d9.dll and dxgi.dll files, then it should be overwritten with debug information.
        ///
        ///So if you have done that and you are reading this, then your game likely crashed because it couldn&apos;t write to this file.
        ///
        ///Some steps to resolve this:
        ///1) Check that this file is in the same folder as the game .exe and the d3d9.dll and dxgi.dll files.
        ///   It&apos;s installed there per default so it should  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string log {
            get {
                return ResourceManager.GetString("log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /*
        ///   _____________________
        ///
        ///     LumaSharpen 1.4.1
        ///   _____________________
        ///
        ///  by Christian Cann Schuldt Jensen ~ CeeJay.dk
        ///
        ///  It blurs the original pixel with the surrounding pixels and then subtracts this blur to sharpen the image.
        ///  It does this in luma to avoid color artifacts and allows limiting the maximum sharpning to avoid or lessen halo artifacts.
        ///
        ///  This is similar to using Unsharp Mask in Photoshop.
        ///
        ///  Compiles with 3.0
        ///*/
        ///
        ///   /*-----------------------------------------------------------.
        ///  /    [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string LumaSharpen {
            get {
                return ResourceManager.GetString("LumaSharpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似   /*-------------------------.
        ///  | :: Defining constants :: |
        ///  &apos;-------------------------*/
        ///
        /////These values are normally defined by the injector dlls, but not when analyzed by GPU Shaderanalyzer
        /////I need to ensure they always have a value to be able to compile them whenever I&apos;m not using the injector.
        ///#ifdef SMAA_PIXEL_SIZE
        ///  #ifndef BUFFER_RCP_WIDTH
        ///    #define BUFFER_RCP_WIDTH SMAA_PIXEL_SIZE.x
        ///    #define BUFFER_RCP_HEIGHT SMAA_PIXEL_SIZE.y
        ///    #define BUFFER_WIDTH (1.0 / SMAA_PIXEL_SIZE.x)
        ///    #define  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Main {
            get {
                return ResourceManager.GetString("Main", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 I was asked in a PM by Nexus user &quot;CassyCade&quot; how one made new shaders for SweetFX.
        ///I thought I&apos;d share my reply with you guys too as there might be someone here that wanted to try their hand at making a shader.
        ///
        ///Quote:
        ///The way SweetFX work is the dlls each call their own .fx file which sets up code specific to them , then the main.h file is called which loads each shader if it has been enabled in the settings, and then later in the file calls it if it&apos;s been enabled.
        ///
        ///I suggest that you start by going into [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Making_shaders {
            get {
                return ResourceManager.GetString("Making_shaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                          Monochrome                             /
        ///  &apos;-----------------------------------------------------------*/
        ////*
        ///  by Christian Cann Schuldt Jensen ~ CeeJay.dk
        ///  
        ///  Monochrome removes color and makes everything black and white.
        ///*/
        ///
        ///float4 MonochromePass( float4 colorInput )
        ///{
        ///  //calculate monochrome
        ///  colorInput.rgb = dot(Monochrome_conversion_values, colorInput.rgb);
        ///	
        ///  //Return the result
        ///  return saturate(colo [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Monochrome {
            get {
                return ResourceManager.GetString("Monochrome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                       Description                           /
        ///  &apos;------------------------------------------------------------/
        ///
        ///Game: Mount &amp; Blade Warband
        ///SweetFX version: 1.2 (updated for 1.3 by CeeJay.dk)
        ///Author: TFL Replica
        ///Description: &quot;Breathes some life into game, better contrast, more natural colors&quot;
        ///Showcase: http://www.overclock.net/t/1296721/how-to-anti-aliasing-injection-methods/250#post_18387567
        ///
        ///
        ///   /*-------------------- [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Mount_Blade_Warband_TFL {
            get {
                return ResourceManager.GetString("Mount_Blade_Warband_TFL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap RCT3Live {
            get {
                object obj = ResourceManager.GetObject("RCT3Live", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap RCT3plus {
            get {
                object obj = ResourceManager.GetObject("RCT3plus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] RCT3启动器MessageBox {
            get {
                object obj = ResourceManager.GetObject("RCT3启动器MessageBox", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 /*------------------------------------------------------------------------------
        ///						SEPIA
        ///------------------------------------------------------------------------------*/
        ///
        ///float4 SepiaPass( float4 colorInput )
        ///{
        ///	float3 sepia = colorInput.rgb;
        ///	
        ///	// calculating amounts of input, grey and sepia colors to blend and combine
        ///	float grey = dot(sepia, float3(0.2126, 0.7152, 0.0722));
        ///	
        ///	sepia *= ColorTone;
        ///	
        ///	float3 blend2 = (grey * GreyPower) + (colorInput.rgb / (GreyPower + 1));
        ///
        ///	colorInput.rgb = lerp(blend [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Sepia {
            get {
                return ResourceManager.GetString("Sepia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] shader {
            get {
                object obj = ResourceManager.GetObject("shader", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 /**
        /// * Copyright (C) 2011 Jorge Jimenez (jorge@iryoku.com)
        /// * Copyright (C) 2011 Belen Masia (bmasia@unizar.es)
        /// * Copyright (C) 2011 Jose I. Echevarria (joseignacioechevarria@gmail.com)
        /// * Copyright (C) 2011 Fernando Navarro (fernandn@microsoft.com)
        /// * Copyright (C) 2011 Diego Gutierrez (diegog@unizar.es)
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without
        /// * modification, are permitted provided that the following conditions are met:
        /// *
        /// *    1. Redistributions  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string SMAA {
            get {
                return ResourceManager.GetString("SMAA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                       Splitscreen                           /
        ///  &apos;-----------------------------------------------------------*/
        ///
        ///float4 SplitscreenPass( float4 colorInput, float2 tex )
        ///{
        ///  // -- Vertical 50/50 split --
        ///  #if splitscreen_mode == 1
        ///	  return (tex.x &lt; 0.5) ? myTex2D(s0, tex) : colorInput;
        ///  #endif
        ///
        ///  // -- Vertical 25/50/25 split --
        ///	#if splitscreen_mode == 2
        ///    //Calculate the distance from center
        ///    float distance = ab [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Splitscreen {
            get {
                return ResourceManager.GetString("Splitscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                        SweetCRT                            /
        ///  &apos;-----------------------------------------------------------*/
        ////*
        ///SweetCRT - a Work in progress.
        ///*/
        ///
        ///#define scanline_strength 0.75
        ///
        ///float4 SweetCRTPass( float4 colorInput, float2 tex )
        ///{
        ///   //
        ///   float scanlines = frac(tex.y * (screen_size.y * 0.5)) - 0.49; //
        ///   scanlines = 1.0 + scanlines * scanline_strength;
        ///   
        ///   colorInput.rgb = saturate(colorInput.rgb * scanlines);
        /// [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string SweetCRT {
            get {
                return ResourceManager.GetString("SweetCRT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 
        ///   /*-----------------------------------------------------------.
        ///  /                SweetFX compatibility settings               /
        ///  &apos;-----------------------------------------------------------*/
        ///#define SweetFX_shader_model 3  //If you have an ancient card that does not support shader model 3 (which SweetFX normally uses)
        ///                               //then you force a lower and older shader model here. This should be set to the highest setting that works.
        ///                               //0 = SM 2.0, 1 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string SweetFX_compatibility_settings {
            get {
                return ResourceManager.GetString("SweetFX_compatibility_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 #include &quot;SweetFX_settings.txt&quot;
        /////#include &quot;SweetFX\Presets\Default_1.5_settings.txt&quot; 的本地化字符串。
        /// </summary>
        internal static string SweetFX_preset {
            get {
                return ResourceManager.GetString("SweetFX_preset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似  .--------------------------------------------------.
        /// 
        ///          .-.                   .  .---..   .
        ///         (   )                 _|_ |     \ / 
        ///          `-..  .    ._.-.  .-. |  |---   /  
        ///         (   )\  \  / (.-&apos; (.-&apos; |  |     / \ 
        ///          `-&apos;  `&apos; `&apos;   `--&apos; `--&apos;`-&apos;&apos;    &apos;   &apos;
        ///                    Shader Suite
        ///                    by CeeJay.dk                    
        /// &apos;--------------------------------------------------&apos;
        /// 
        /// - Version 1.5.1
        ///
        ///SweetFX is a universal image improvement and tweaking mod,
        ///that wo [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string SweetFX_readme {
            get {
                return ResourceManager.GetString("SweetFX_readme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.
        ///  /                       Description                           /
        ///  &apos;------------------------------------------------------------/
        ///
        ///Game:
        ///Author:
        ///SweetFX version: 1.5.1
        ///Description:
        ///
        ///Please note when tweaking settings that higher numbers does not always equal better (nor does lower).
        ///Finding the best settings for your game and your taste is about finding just the right amount to apply.
        ///
        ///If you made a good setttings preset please share it with [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string SweetFX_settings {
            get {
                return ResourceManager.GetString("SweetFX_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                        TECHICOLOR                           /
        ///  &apos;-----------------------------------------------------------*/
        ///// Original by DKT70
        ///// Optimized by CeeJay.dk
        ///// - Version 1.1
        ///
        ///#define cyanfilter float3(0.0, 1.30, 1.0)
        ///#define magentafilter float3(1.0, 0.0, 1.05) 
        ///#define yellowfilter float3(1.6, 1.6, 0.05)
        ///
        ///#define redorangefilter float2(1.05, 0.620) //RG_
        ///#define greenfilter float2(0.30, 1.0)       //RG_
        ///#define magent [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Technicolor {
            get {
                return ResourceManager.GetString("Technicolor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /*------------------------------------------------------------------------------
        ///						TONEMAP
        ///------------------------------------------------------------------------------*/
        ///// Version 1.1
        ///
        ///float4 TonemapPass( float4 colorInput )
        ///{
        ///	float3 color = colorInput.rgb;
        ///
        ///	color = saturate(color - Defog * FogColor); // Defog
        ///	
        ///	color *= pow(2.0f, Exposure); // Exposure
        ///	
        ///	color = pow(color, Gamma);    // Gamma -- roll into the first gamma correction in main.h ?
        ///
        ///	//#define BlueShift 0.00	//Blueshift
        ///	//float4 d = [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Tonemap {
            get {
                return ResourceManager.GetString("Tonemap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                       Description                           /
        ///  &apos;------------------------------------------------------------/
        ///
        ///Game: Torchlight 2
        ///SweetFX version: 1.1.1
        ///Author: BetA
        ///Description: &quot;Reduces that Foggy screen almost completely, adds a little more color, sharpen and an HDR effect&quot;
        ///Showcase: http://forums.guru3d.com/showpost.php?p=4420578&amp;postcount=106
        ///
        ///
        /// /*-----------------------------------------------------------.
        ////      [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Torchlight2_BetA {
            get {
                return ResourceManager.GetString("Torchlight2_BetA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.   
        ///  /                       Description                           /
        ///  &apos;------------------------------------------------------------/
        ///
        ///Game: Torchlight 2
        ///SweetFX version: 1.1.1
        ///Author: TFL Replica
        ///Description: &quot;..aim was to make the game slightly grittier/darker&quot;
        ///Showcase: http://www.overclock.net/t/1296721/how-to-anti-aliasing-injection-methods/150#post_18235528
        ///
        ///
        ///   /*-----------------------------------------------------------.   
        ///  /       [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Torchlight2_TFL {
            get {
                return ResourceManager.GetString("Torchlight2_TFL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.
        ///  /                          Vibrance                           /
        ///  &apos;-----------------------------------------------------------*/
        ////*
        ///  by Christian Cann Schuldt Jensen ~ CeeJay.dk
        ///
        ///  Vibrance intelligently boosts the saturation of pixels
        ///  so pixels that had little color get a larger boost than pixels that had a lot.
        ///
        ///  This avoids oversaturation of pixels that were already very saturated.
        ///*/
        ///
        ///float4 VibrancePass( float4 colorInput )
        ///{
        ///  #if [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Vibrance {
            get {
                return ResourceManager.GetString("Vibrance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似    /*-----------------------------------------------------------.
        ///  /                          Vignette                           /
        ///  &apos;-----------------------------------------------------------*/
        ////*
        ///  Version 1.3
        ///
        ///  Darkens the edges of the image to make it look more like it was shot with a camera lens.
        ///  May cause banding artifacts.
        ///*/
        ///
        /////Make sure the VignetteRatio exits to avoid breaking if the user uses a Settings for a previous version that didn&apos;t include this
        ///#ifndef VignetteRatio
        ///  #define VignetteR [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Vignette {
            get {
                return ResourceManager.GetString("Vignette", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] Win8_ON {
            get {
                object obj = ResourceManager.GetObject("Win8_ON", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 启动 {
            get {
                object obj = ResourceManager.GetObject("启动", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 启动器设置 {
            get {
                object obj = ResourceManager.GetObject("启动器设置", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 存档修复 {
            get {
                object obj = ResourceManager.GetObject("存档修复", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 添加扩充 {
            get {
                object obj = ResourceManager.GetObject("添加扩充", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 添加音乐 {
            get {
                object obj = ResourceManager.GetObject("添加音乐", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 画面设置 {
            get {
                object obj = ResourceManager.GetObject("画面设置", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 访问 {
            get {
                object obj = ResourceManager.GetObject("访问", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 退出 {
            get {
                object obj = ResourceManager.GetObject("退出", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
